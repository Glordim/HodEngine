#pragma once
#include <cstdint>

namespace hod::input
{
	/// @brief 
	enum InputId : int32_t
	{
		Unknown = -1,

		// Mouse
		MouseStartEnum = 0,

		MouseAxisX,
		MouseAxisY,
		MouseAxisWheel,
		MouseButtonLeft,
		MouseButtonRight,
		MouseButtonWheel,
		MouseButton3,
		MouseButton4,
		MouseButton5,
		MouseButton6,
		MouseButton7,
		MouseButton8,

		MouseEndEnum,

		MouseEnumCount = MouseEndEnum - MouseStartEnum - 1,

		// Pad
		PadStartEnum = 1000,

		PadAxisLeftX,
		PadAxisLeftY,
		PadAxisRightX,
		PadAxisRightY,
		PadButtonCross,
		PadButtonCircle,
		PadButtonTriangle,
		PadButtonSquare,
		PadButtonDpadDown,
		PadButtonDpadUp,
		PadButtonDpadLeft,
		PadButtonDpadRight,
		PadButtonL1,
		PadButtonL2,
		PadButtonL3,
		PadButtonR1,
		PadButtonR2,
		PadButtonR3,
		PadButtonStart,
		PadButtonSelect,
		PadSensorX,
		PadSensorY,
		PadSensorZ,
		PadSensorG,
		PadButtonTouchpad,
		PadTouchCount,
		PadTouch1Id,
		PadTouch1X,
		PadTouch1Y,
		PadTouch2Id,
		PadTouch2X,
		PadTouch2Y,
		PadOrientationX,
		PadOrientationY,
		PadOrientationZ,
		PadAccelerationX,
		PadAccelerationY,
		PadAccelerationZ,
		PadAngularVelocityX,
		PadAngularVelocityY,
		PadAngularVelocityZ,
		PadPositionX,
		PadPositionY,
		PadPositionZ,

		PadEndEnum,

		PadEnumCount = PadEndEnum - PadStartEnum - 1,

		// XBoxHelper
		PadButtonA = PadButtonCross,
		PadButtonB = PadButtonCircle,
		PadButtonY = PadButtonTriangle,
		PadButtonX = PadButtonSquare,
		PadButtonLb = PadButtonL1,
		PadButtonLt = PadButtonL2,
		PadButtonLs = PadButtonL3,
		PadButtonRb = PadButtonR1,
		PadButtonRt = PadButtonR2,
		PadButtonRs = PadButtonR3,
		PadButtonBack = PadButtonSelect,

		// Keyboard
		KeyboardStartEnum = 2000,

		// following ids are scan_code based.
		// they represent the scan code of the key in the keyboard (so without any layout support)
		// they are also approximately sorted from the keyboard top left to its bottom right...

		KeyEscape,
		Key1,
		Key2,
		Key3,
		Key4,
		Key5,
		Key6,
		Key7,
		Key8,
		Key9,
		Key0,
		KeySubtract,
		KeyEqual,
		KeyBackspace,
		KeyTab,
		KeyQ,
		KeyW,
		KeyE,
		KeyR,
		KeyT,
		KeyY,
		KeyU,
		KeyI,
		KeyO,
		KeyP,
		KeyLeftBracket, // [
		KeyRightBracket, // ]
		KeyEnter,
		KeyLeftControl,
		KeyA,
		KeyS,
		KeyD,
		KeyF,
		KeyG,
		KeyH,
		KeyJ,
		KeyK,
		KeyL,
		KeySemicolon, // ;
		KeyApostrophe, // '
		KeyTilde, // ~
		KeyLeftShift,
		KeyBackslash,
		KeyZ,
		KeyX,
		KeyC,
		KeyV,
		KeyB,
		KeyN,
		KeyM,
		KeyComma,
		KeyPeriod, // .
		KeySlash,
		KeyRightShift,
		KeyNumpadMultiply,
		KeyLeftAlt,
		KeySpace,
		KeyCapsLock,
		KeyF1,
		KeyF2,
		KeyF3,
		KeyF4,
		KeyF5,
		KeyF6,
		KeyF7,
		KeyF8,
		KeyF9,
		KeyF10,
		KeyNumLock,
		KeyScrollLock,
		KeyNumpad7,
		KeyNumpad8,
		KeyNumpad9,
		KeyNumpadSubtract,
		KeyNumpad4,
		KeyNumpad5,
		KeyNumpad6,
		KeyNumpadAdd,
		KeyNumpad1,
		KeyNumpad2,
		KeyNumpad3,
		KeyNumpad0,
		KeyNumpadDecimal,
		KeySysRq,
		KeyScancode85, // f11 on a cherry g80-0777 keyboard, f12 on a telerate keyboard, pf1 on a focus 9000 keyboard, fn on an ibm think_pad... don't use it...
		KeyUnlabelled,
		KeyF11,
		KeyF12,
		// next key codes are very specific to the keyboard type and have multiple signification, don't use them for a default mapping. (but can be store in config file if the player use them in a custom mapping)
		KeyF13,
		KeyF14,
		KeyF15,
		KeyF16,
		KeyF17,
		KeyF18,
		KeyF19,
		KeyF20,
		KeyF21,
		KeyF22,
		KeyF23,
		KeyF24,
		KeyOem1,
		KeyOem2,
		KeyOem3,
		KeyOem4,
		KeyOem5,
		KeyOem6,
		KeyOem7,
		KeyScancode108,
		KeyScancode109,
		KeyScancode110,
		KeyScancode111,
		KeyScancode112,
		KeyScancode113,
		KeyScancode114,
		KeyScancode115,
		KeyScancode116,
		KeyScancode117,
		KeyScancode118,
		KeyScancode119,
		KeyScancode120,
		KeyScancode121,
		KeyScancode122,
		KeyScancode123,
		KeyScancode124,
		KeyScancode125,
		KeyScancode126,
		KeyScancode127,
		KeyScancode128,
		KeyScancode129,
		KeyScancode130,
		KeyScancode131,
		KeyScancode132,
		KeyScancode133,
		KeyScancode134,
		KeyScancode135,
		KeyScancode136,
		KeyScancode137,
		KeyScancode138,
		KeyScancode139,
		KeyScancode140,
		KeyScancode141,
		KeyScancode142,
		KeyScancode143,
		KeyScancode144,
		KeyScancode145,
		KeyScancode146,
		KeyScancode147,
		KeyScancode148,
		KeyScancode149,
		KeyScancode150,
		KeyScancode151,
		KeyScancode152,
		KeyScancode153,
		KeyScancode154,
		KeyScancode155,
		KeyScancode156,
		KeyScancode157,
		KeyScancode158,
		KeyScancode159,
		KeyScancode160,
		KeyScancode161,
		KeyScancode162,
		KeyScancode163,
		KeyScancode164,
		KeyScancode165,
		KeyScancode166,
		KeyScancode167,
		KeyScancode168,
		KeyScancode169,
		KeyScancode170,
		KeyScancode171,
		KeyScancode172,
		KeyScancode173,
		KeyScancode174,
		KeyScancode175,
		KeyScancode176,
		KeyScancode177,
		KeyScancode178,
		KeyScancode179,
		KeyScancode180,
		KeyScancode181,
		KeyScancode182,
		KeyScancode183,
		KeyScancode184,
		KeyScancode185,
		KeyScancode186,
		KeyScancode187,
		KeyScancode188,
		KeyScancode189,
		KeyScancode190,
		KeyScancode191,
		KeyScancode192,
		KeyScancode193,
		KeyScancode194,
		KeyScancode195,
		KeyScancode196,
		KeyScancode197,
		KeyScancode198,
		KeyScancode199,
		KeyScancode200,
		KeyScancode201,
		KeyScancode202,
		KeyScancode203,
		KeyScancode204,
		KeyScancode205,
		KeyScancode206,
		KeyScancode207,
		KeyScancode208,
		KeyScancode209,
		KeyScancode210,
		KeyScancode211,
		KeyScancode212,
		KeyScancode213,
		KeyScancode214,
		KeyScancode215,
		KeyScancode216,
		KeyScancode217,
		KeyScancode218,
		KeyScancode219,
		KeyScancode220,
		KeyScancode221,
		KeyScancode222,
		KeyScancode223,
		KeyScancode224,
		KeyScancode225,
		KeyScancode226,
		KeyScancode227,
		KeyScancode228,
		KeyScancode229,
		KeyScancode230,
		KeyScancode231,
		KeyScancode232,
		KeyScancode233,
		KeyScancode234,
		KeyScancode235,
		KeyScancode236,
		KeyScancode237,
		KeyScancode238,
		KeyScancode239,
		KeyScancode240,
		KeyScancode241,
		KeyScancode242,
		KeyScancode243,
		KeyScancode244,
		KeyScancode245,
		KeyScancode246,
		KeyScancode247,
		KeyScancode248,
		KeyScancode249,
		KeyScancode250,
		KeyScancode251,
		KeyScancode252,
		KeyScancode253,
		KeyScancode254,
		KeyScancode255,

		// Next key codes are escaped scancode (e0)
		KeyEscapeScancode0,
		KeyEscapeScancode1,
		KeyEscapeScancode2,
		KeyEscapeScancode3,
		KeyEscapeScancode4,
		KeyEscapeScancode5,
		KeyEscapeScancode6,
		KeyEscapeScancode7,
		KeyEscapeScancode8,
		KeyEscapeScancode9,
		KeyEscapeScancode10,
		KeyEscapeScancode11,
		KeyEscapeScancode12,
		KeyEscapeScancode13,
		KeyEscapeScancode14,
		KeyEscapeScancode15,
		KeyEscapeScancode16,
		KeyEscapeScancode17,
		KeyEscapeScancode18,
		KeyEscapeScancode19,
		KeyEscapeScancode20,
		KeyEscapeScancode21,
		KeyEscapeScancode22,
		KeyEscapeScancode23,
		KeyEscapeScancode24,
		KeyEscapeScancode25,
		KeyEscapeScancode26,
		KeyEscapeScancode27,
		KeyEscapeScancode28,
		KeyEscapeScancode29,
		KeyEscapeScancode30,
		KeyEscapeScancode31,
		KeyEscapeScancode32,
		KeyEscapeScancode33,
		KeyEscapeScancode34,
		KeyEscapeScancode35,
		KeyEscapeScancode36,
		KeyEscapeScancode37,
		KeyEscapeScancode38,
		KeyEscapeScancode39,
		KeyEscapeScancode40,
		KeyEscapeScancode41,
		KeyEscapeScancode42,
		KeyEscapeScancode43,
		KeyEscapeScancode44,
		KeyEscapeScancode45,
		KeyEscapeScancode46,
		KeyEscapeScancode47,
		KeyEscapeScancode48,
		KeyEscapeScancode49,
		KeyEscapeScancode50,
		KeyEscapeScancode51,
		KeyEscapeScancode52,
		KeyEscapeScancode53,
		KeyEscapeScancode54,
		KeyEscapeScancode55,
		KeyEscapeScancode56,
		KeyEscapeScancode57,
		KeyEscapeScancode58,
		KeyEscapeScancode59,
		KeyEscapeScancode60,
		KeyEscapeScancode61,
		KeyEscapeScancode62,
		KeyEscapeScancode63,
		KeyEscapeScancode64,
		KeyEscapeScancode65,
		KeyEscapeScancode66,
		KeyEscapeScancode67,
		KeyEscapeScancode68,
		KeyEscapeScancode69,
		KeyEscapeScancode70,
		KeyEscapeScancode71,
		KeyEscapeScancode72,
		KeyEscapeScancode73,
		KeyEscapeScancode74,
		KeyEscapeScancode75,
		KeyEscapeScancode76,
		KeyEscapeScancode77,
		KeyEscapeScancode78,
		KeyEscapeScancode79,
		KeyEscapeScancode80,
		KeyEscapeScancode81,
		KeyEscapeScancode82,
		KeyEscapeScancode83,
		KeyEscapeScancode84,
		KeyEscapeScancode85,
		KeyEscapeScancode86,
		KeyEscapeScancode87,
		KeyEscapeScancode88,
		KeyEscapeScancode89,
		KeyEscapeScancode90,
		KeyEscapeScancode91,
		KeyEscapeScancode92,
		KeyEscapeScancode93,
		KeyEscapeScancode94,
		KeyEscapeScancode95,
		KeyEscapeScancode96,
		KeyEscapeScancode97,
		KeyEscapeScancode98,
		KeyEscapeScancode99,

		KeyboardEndEnum,

		// Escape keycode helper
		KeyNumpadEnter = KeyEscapeScancode0 + 0x1c,
		KeyRightControl = KeyEscapeScancode0 + 0x1d,
		KeyNumpadDivide = KeyEscapeScancode0 + 0x35,
		KeyPrintScreen = KeyEscapeScancode0 + 0x37,
		KeyRightAlt = KeyEscapeScancode0 + 0x38,
		KeyBreak = KeyEscapeScancode0 + 0x46,
		KeyHome = KeyEscapeScancode0 + 0x47,
		KeyUp = KeyEscapeScancode0 + 0x48,
		KeyPageUp = KeyEscapeScancode0 + 0x49,
		KeyLeft = KeyEscapeScancode0 + 0x4b,
		KeyRight = KeyEscapeScancode0 + 0x4d,
		KeyEnd = KeyEscapeScancode0 + 0x4f,
		KeyDown = KeyEscapeScancode0 + 0x50,
		KeyPageDown = KeyEscapeScancode0 + 0x51,
		KeyInsert = KeyEscapeScancode0 + 0x52,
		KeyDelete = KeyEscapeScancode0 + 0x53,
		KeyLeftWindow = KeyEscapeScancode0 + 0x5b,
		KeyRightWindow = KeyEscapeScancode0 + 0x5c,
		KeyMenu = KeyEscapeScancode0 + 0x5d,

		KeyboardEnumCount = KeyboardEndEnum - KeyboardStartEnum - 1,

		// Keyboard virtual
		KeyboardVirtualStartEnum = 2500,

		KeyVirtualA,
		KeyVirtualB,
		KeyVirtualC,
		KeyVirtualD,
		KeyVirtualE,
		KeyVirtualF,
		KeyVirtualG,
		KeyVirtualH,
		KeyVirtualI,
		KeyVirtualJ,
		KeyVirtualK,
		KeyVirtualL,
		KeyVirtualM,
		KeyVirtualN,
		KeyVirtualO,
		KeyVirtualP,
		KeyVirtualQ,
		KeyVirtualR,
		KeyVirtualS,
		KeyVirtualT,
		KeyVirtualU,
		KeyVirtualV,
		KeyVirtualW,
		KeyVirtualX,
		KeyVirtualY,
		KeyVirtualZ,

		KeyboardVirtualEndEnum,
		KeyboardVirtualEnumCount = KeyboardVirtualEndEnum - KeyboardVirtualStartEnum - 1,

		// Custom input
		UserDeviceStartEnum = 100000

		// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
		// !!!!      Do not add anything past this value       !!!!
		// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	};
}
